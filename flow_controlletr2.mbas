program flow_controlletr2

' Declarations section

' ==== lcd DECLERATION SECTION ======
dim
  LCD_RS as sbit at RB4_bit
  LCD_EN as sbit at RB5_bit
  LCD_D7 as sbit at RA3_bit
  LCD_D6 as sbit at RA2_bit
  LCD_D5 as sbit at RA1_bit
  LCD_D4 as sbit at RB0_bit

dim
  LCD_RS_Direction as sbit at TRISB4_bit
  LCD_EN_Direction as sbit at TRISB5_bit
  LCD_D7_Direction as sbit at TRISA3_bit
  LCD_D6_Direction as sbit at TRISA2_bit
  LCD_D5_Direction as sbit at TRISA1_bit
  LCD_D4_Direction as sbit at TRISB0_bit

  ' Global Variables Decleration
  
      dim old_total as float
      dim flow_rate as float

      dim flow as float
      dim total_flow as float
      dim set_point as word
      dim Flow_txt as string[8]
      dim set_Point_txt as string[8]
      dim totallizer as string[12]


 sub function get_ADdata(Dim channel_set as byte) as word

 dim H_byte, L_byte as byte

      ADCON1 = %11000000     '' bit7  format, bit6-4 clock input,bit2-3 00, bit1 Vref
        ''      FVRCON = %11000010  ''Fixed voltage referanc e is set to 2.048 V
      ADCON0 = channel_set
      delay_ms(2)

   H_byte = ADRESH
   L_byte = ADRESL

   result =  (256* H_byte)  +    L_byte
   delay_ms(1)
        ' ADCON0 = 0

 end sub
 
   sub procedure pic_intiate()
  '          oldstate = 0
 ' cnt = 0                             ' Reset counter


        TRISA = %00000001       '  LCD outputs
        TRISB=  %00001110    ' KEYpad
        TRISC = %10100111    ' motor and relays output and 2 digital input
        ADCON0 = %00000000     ' AD0
        ADCON1 = 0x0e   'digital except A0, Analog
        TMR2 = 0x00
       'T2CLKCON = 1 'Fosc/4
        T2CON = %00000100   ' TMR2 ON + in and outpot prescaler = 1:1


  '   Trisb.1=1
     '   PWM3CON =0
  '  PR2 = 0xff  ''0XFF
  '   T2CON = %11111110   ''  Timer2-type Clock Prescale Select bits  and PR2 determin PWM frequency
      delay_ms(1)
  '  Trisb.1 = 0
    portc.2 =0
    portc.3 =0
    portc.4 =0
   ''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '  Keypad_Init()                       ' Initialize Keypad
    Lcd_Init()                     ' Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR)
  Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off

    ' Lcd_Out(1,1," check valves ")
     Lcd_Out(1,6,"AEC")
'  LCD_OUT(2,12,unit_txt)
delay_ms(2000)
    end sub


dim max_flow as word
dim i,counter as byte
dim max_flow_txt as string[8]
dim push_button as sbit at RC2_bit  ' clear setpoint or display flow rate

    sub procedure max_flow_rate()
     'init_timer0()
        wordToStr(max_flow, max_flow_txt )
        Lcd_Init()                     ' Initialize Lcd
        Lcd_Cmd(_LCD_CLEAR)
        Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
        LCD_OUT( 1,1,"FLOW RATE:")
        Lcd_Out(1,12,max_flow_txt)
        delay_ms(5)
        for i = 0 to 200 step 1
            while (portc.0 = 0)
               max_flow = max_flow + 1
               wordToStr(max_flow, max_flow_txt )
               Lcd_Init()                     ' Initialize Lcd
               Lcd_Cmd(_LCD_CLEAR)
               Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
               LCD_OUT( 1,1,"FLOW RATE:")
               Lcd_Out(1,12,max_flow_txt)
               delay_ms(5)
           wend
           while (portc.1 = 0)
               max_flow = max_flow - 1
               wordToStr(max_flow, max_flow_txt )
               Lcd_Init()                     ' Initialize Lcd
               Lcd_Cmd(_LCD_CLEAR)
               Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
               LCD_OUT( 1,1,"FLOW RATE:")
               Lcd_Out(1,12,max_flow_txt)
               delay_ms(5)
          wend
         delay_ms(50)
      next i
     EEPROM_Write(0x09,max_flow)
     EEPROM_Write(0x0A,max_flow >> 8)
     delay_ms(20)
    end sub

main:

   pic_intiate()

   set_point =0
   total_flow =0
   porta.4 = 0  'Relay
   max_flow = 0
   counter = 0
   'max_flow_rate = 200

     set_point = EEPROM_Read(0x06)<<8 or EEPROM_Read(0x05)    'low+high bytes
     delay_ms(20)
     max_flow =  EEPROM_Read(0x0A)<<8 or EEPROM_Read(0x09)    'low+high bytes
     delay_ms(20)

  while true
'   Main program

   while portc.0 = 0
         delay_ms(10)
         set_point = set_point + 1
         EEPROM_Write(0x05,set_point)
         EEPROM_Write(0x06,set_point >> 8)
         delay_ms(20)

          wordToStr(set_point, set_point_txt )
          '  flow_rate = 78
          '  wordTostr(flow_rate, Flow_txt)

           Lcd_Init()                     ' Initialize Lcd
           Lcd_Cmd(_LCD_CLEAR)
           Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
           LCD_OUT( 1,1,"Set Point:")
           Lcd_Out(1,12,set_point_txt)
           ' LCD_OUT(2,7, Flow_txt)
           '   porta.5 =0
           delay_ms(5)
    '  porta.5 = 1
      wend

      while portc.1 = 0
           delay_ms(10)
           set_point = set_point - 1
           EEPROM_Write(0x05,set_point)
           EEPROM_Write(0x06,set_point >> 8)
           delay_ms(20)

                      '       FloatToStr_FixLen(total_flow, Flow_txt, 4)  '' To LCD

    wordToStr(set_point, set_point_txt )
                      '  flow_rate = 78
                            '  wordTostr(flow_rate, Flow_txt)

  Lcd_Init()                     ' Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR)
  Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
  LCD_OUT( 1,1,"Set Point:")
  Lcd_Out(1,12,set_point_txt)
  delay_ms(5)
 ' LCD_OUT(2,7, Flow_txt)

      'delay_ms(5)
      wend


     while portc.2 = 0
           delay_ms(200)
           total_flow = 0
           porta.4 = 0

          for i = 0 to 20 step 1
               if(portc.2 = 0)  then
                   counter = counter + 1
               end if
               delay_ms(100)
           next i

           if(counter >= 15)  then
               counter = 0
               max_flow_rate()
           end if
      wend


          flow_rate = ADC_Read(0) '- 100
          flow_rate = flow_rate - 250
          flow_rate = flow_rate * max_flow/774

          if flow_rate < 0 then
            flow_rate = 0
          end if

          flow = flow_rate/430
          total_flow = total_flow +flow

          if total_flow > set_point then
             porta.4 = 1
          end if

   '    Read_totallizer()

    ' Old_total =     strtofloat(totallizer)
    Old_total = Old_total  + Flow_rate/40 ' + 55.22 +1.55'

   FloatToStr_FixLen(total_flow, Flow_txt, 4)  '' To LCD

                             wordToStr(set_point, set_point_txt )
                      '  flow_rate = 78
                            '  wordTostr(flow_rate, Flow_txt)

  Lcd_Init()                     ' Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR)
  Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
  LCD_OUT( 1,1,"Set Point:")
  Lcd_Out(1,12,set_point_txt)

  Lcd_Out(2,1,"Flow Out:")
  LCD_OUT(2,11, Flow_txt)
   'delay_ms(5)


  wend

end.